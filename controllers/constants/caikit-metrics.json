{
    "metrics": {
        "supported": "true",
        "config": [
            {
                "title": "Number of requests",
                "type": "REQUEST_COUNT",
                "queries": [
                    {
                        "title": "Number of successful incoming requests",
                        "query": "sum(increase(predict_rpc_count_total{namespace='${NAMESPACE}',code='OK',model_id='${MODEL_NAME}'}[${RATE_INTERVAL}]))"
                    },
                    {
                        "title": "Number of failed incoming requests",
                        "query": "sum(increase(predict_rpc_count_total{namespace='${NAMESPACE}',code!='OK',model_id='${MODEL_NAME}'}[${RATE_INTERVAL}]))"
                    }
                ]
            },
            {
                "title": "Average response time (ms)",
                "type": "MEAN_LATENCY",
                "queries": [
                    {
                        "title": "Average inference latency",
                        "query": "sum by (model_id) (rate(predict_caikit_library_duration_seconds_sum{namespace='${NAMESPACE}',model_id='${MODEL_NAME}'}[1m])) / sum by (model_id) (rate(predict_caikit_library_duration_seconds_count{namespace='${NAMESPACE}',model_id='${MODEL_NAME}'}[${RATE_INTERVAL}]))"
                    },
                    {
                        "title": "Average e2e latency",
                        "query": "sum by (model_id) (rate(caikit_core_load_model_duration_seconds_sum{namespace='${NAMESPACE}',model_id='${MODEL_NAME}'}[1m]) + rate(predict_caikit_library_duration_seconds_sum{namespace='${NAMESPACE}',model_id='${MODEL_NAME}'}[1m])) / sum by (model_id) (rate(caikit_core_load_model_duration_seconds_count{namespace='${NAMESPACE}',model_id='${MODEL_NAME}'}[${RATE_INTERVAL}]) + rate(predict_caikit_library_duration_seconds_count{namespace='${NAMESPACE}',model_id='${MODEL_NAME}'}[${RATE_INTERVAL}]))"
                    }
                ]
            },
            {
                "title": "CPU utilization %",
                "type": "CPU_USAGE",
                "queries": [
                    {
                        "title": "CPU usage",
                        "query": "sum(node_namespace_pod_container:container_cpu_usage_seconds_total:sum_irate{namespace='${NAMESPACE}'}* on(namespace,pod) group_left(workload, workload_type) namespace_workload_pod:kube_pod_owner:relabel{namespace='${NAMESPACE}', workload=~'${MODEL_NAME}-predictor-.*', workload_type=~'deployment'}) by (pod)"
                    }
                ]
            },
            {
                "title": "Memory utilization %",
                "type": "MEMORY_USAGE",
                "queries": [
                    {
                        "title": "Memory usage",
                        "query":  "sum(container_memory_working_set_bytes{namespace='${NAMESPACE}', pod=~'${MODEL_NAME}-predictor-.*'}) by (pod)"
                    }
                ]
            }
        ]
    }
}